spring.application.name=secured-rest-api
#================================SPRING ACTUATOR==============================================
#Spring Actuator:
#### http://localhost:8080/actuator
#### http://localhost:8080/actuator/configprops
#### http://localhost:8080/actuator/metrics
#### http://localhost:8080/actuator/metrics/hikaricp.connections
management.endpoints.web.exposure.include=*
management.endpoint.metrics.enabled=true
# SWAGGER-UI__________________________________________________
# swagger-ui custom path
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.show-actuator=true
# Packages to include
#springdoc.packagesToScan=com.package1, com.package2
# Paths to include
#springdoc.pathsToMatch=/v1, /api/balance/**
# THYMELEAF______________________________________________
spring.thymeleaf.cache=false
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
### ##configure spring-boot and thymeleaf using the application.yml file located in the src/main/resources folder.
#spring.thymeleaf.cache
## #*enable/disable template caching.
#spring.thymeleaf.check-template
## #*check that the template exists before rendering it.
#spring.thymeleaf.check-template-location
## #*check that the templates location exists.
#spring.thymeleaf.content-type
## #*specifies content-type value.
#spring.thymeleaf.enabled
## #*enable mvc thymeleaf view resolution.
#spring.thymeleaf.encoding
## #*specifies template encoding.
#spring.thymeleaf.excluded-view-names
## #*comma-separated list of view names that should be excluded from resolution.
#spring.thymeleaf.mode
## #*template mode to be applied to templates. See also StandardTemplateModeHandlers.
#spring.thymeleaf.prefix
## #*specifies the prefix that gets prepended to view names when building a URL.
#spring.thymeleaf.suffix
## #*specifies the suffix that gets appended to view names when building a URL.
#spring.thymeleaf.template-resolver-order
## #*specifies the order of the template resolver in the chain
#spring.thymeleaf.view-names
## #*comma-separated list of view names that can be resolved.
# ===========================================================================
#spring.h2.console.enabled=true
#spring.h2.console.settings.web-allow-others=true

###############################################################
# #should use logging level-related properties only in ``development mode``
logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
logging.level.com.zaxxer.hikari=TRACE
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
############################################################
#logging.level.ROOT=trace
#logging.level.org.springframework.nodeValue=trace
logging.level.org.springframework.transaction=trace
logging.level.org.hibernate.engine.transaction.internal.TransactionImpl=trace
logging.pattern.console=\
  %magenta(>>>%d{yyyy-MM-dd HH:mm:SSSS}) \
  %boldYellow(__PID=${PID}__) %boldBlue([Thread-Name:''%thread'']) \
  %highlight(%-5level) %boldCyan(%logger.%M) %magenta(:::) \
  %boldGreen(_____[{{{%n %msg %n}}}]_____%n)
#/////////////////////////DataSource-Proxy///////////////////////////////////
##############################<artifactId>datasource-proxy-spring-boot-starter</artifactId>
logging.level.net.ttddyy.dsproxy.listener=debug
### One of logging libraries (slf4j, jul, common, sysout)
#decorator.datasource.datasource-proxy.logging=slf4j
#decorator.datasource.datasource-proxy.query.enable-logging=true
#decorator.datasource.datasource-proxy.query.log-level=debug
# Formats the SQL for better readability. Uses Hibernate's formatter if present on the class path.
# If you opted in for a different JPA provider you need to add https://github.com/vertical-blank/sql-formatter
# as a runtime dependency to your app  to enable this.
# Mutually exclusive with json-format=true
decorator.datasource.datasource-proxy.multiline=true
decorator.datasource.datasource-proxy.format-sql=true
#decorator.datasource.datasource-proxy.json-format=true
# Enable Query Metrics
#decorator.datasource.datasource-proxy.count-query=true